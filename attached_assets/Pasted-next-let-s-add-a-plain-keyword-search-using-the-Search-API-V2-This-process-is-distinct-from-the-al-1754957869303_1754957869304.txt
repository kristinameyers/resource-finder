next, let's add a plain keyword search using the Search API V2. This process is distinct from the already implemented taxonomy code search and will not override or conflict with your existing taxonomy workflow.

The keyword search input will be placed below the "Resource Filters" toggle (see the screenshot)

1. User Inputs a Search Term (Keyword)
* User types a free-text keyword (e.g., "childcare", "food help", "housing") into the app’s keyword search field.

2. Construct the Search API Request
* You build a request to /searchV2/search.
* For keyword searches, you use the following parameters:
    * keywords: Array of user-entered keyword(s)
    * Do NOT set the taxonomy flag (keywordIsTaxonomyCode). Leave it blank or explicitly set to false.
Example JSON request:
json
{
  "keywords": ["childcare"],  // User's free-text input
  "location": "Santa Barbara, CA", // or zip code, as desired
  "keywordIsTaxonomyCode": false    // Omit or set to false
}

3. Send the Request with Keyword Search
* Use a POST (for flexibility) or GET request as needed.
    * For POST: Send a JSON body as above.
    * For GET: Pass keywords and location as query parameters, with no taxonomy flag.

4. API Processes the Search
* The API matches resources whose data contains the entered keywords in relevant fields (title, description, etc.).
* No taxonomy tree traversal is performed; matches are based solely on text similarity and relevance.

5. Receive and Handle Response
* API returns a list of resource objects matching your keyword (and location if a zip code is provided).
* Each object contains resource details (address, eligibility, hours, contact, etc.), just like the taxonomy code search.

6. Display Results
* Show resource results in your UI for user review.
* Display key resource properties extracted from the response, as in your taxonomy code workflow.

Example for Replit Integration
* When user performs a keyword search, only send their keyword (["childcare"]) to the API, with keywordIsTaxonomyCode set to false.
* When user performs a taxonomy code search, send the taxonomy code explicitly (["bd-1800"] with keywordIsTaxonomyCode: true).
* Both options can be shown together for enhanced resource discovery.

Summary: To add keyword search alongside your taxonomy code flow, accept free-text input, use keyword(s) in the API call, and be sure not to flag it as a taxonomy search. This keeps both search paths distinct and non-conflicting within your application.