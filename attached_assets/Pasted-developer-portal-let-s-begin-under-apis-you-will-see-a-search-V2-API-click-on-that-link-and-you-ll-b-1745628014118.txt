developer
portal let's begin under apis you will
see a search V2 API click on that link
and you'll be brought to the search V2
documentation page feel free to read
through the full set of documentation
available on this page including the
operations for both get and post to the
keywords search API as well as the
filters that are available for you to
investigate pull values from and use in
the post method of the keyword
search let's begin by doing a simple
search the get operation on the keyword
search API is intended to be a more
simple approach to searching the
resource data repository without a lot
of complexity in having to post up
values such as order buys or filters in
the request body let's take a look at
what that
means and come over to the try it
section and similar to V1 we're just
going to do a very basic search for food
and let's search in the ventur area no
other values will be set they'll
maintain their default values as set
within the API we'll go ahead and we
will submit
that back comes 34 results meeting that
particular search if we come back up and
inspect the other values available on
the get
operation we can apply filters such as
distance from the center of
Ventura or in the case where we want to
search rather than the distance
from from the location which would be
set to near we can search for all
resources within the location which
would be interpreted as a search for
food within the location of Ventura so
the geographic boundary of Ventura
either a city or a county in the case
where you want to distinguish the type
of a geographic
boundary you could deter you could set
that within search within location type
so that could be set to as an example
County okay let's take a look at some of
the other filters so just do a
reset and so we're looking at the
defaults here stay with food and
Ventura distance data owner so in the
case where we want to restrict the data
to one or more owners of the 211 data we
are searching for food around Ventura so
it would kind of make sense that we use
211 Ventura as one of the data owners if
we leave it blank it would search over
all the data owners in which your
subscription key has access to skip and
size is for paging so bringing back say
your typical response with 10 results
and there are 100 results that would be
10 pages of 10 results on a page
search mode refers to the the matches
that are required so in this case I
typed food but if I had typed food
pantry and left
the search mode to all it would force
the search to find both food and Pantry
in the search as opposed to
any which would then relax the search to
search for food or pantry
or food and Pantry in the repository in
the case where food and pantry is found
in a single record that would
essentially boost the relevance of the
of the record or rank the record higher
and you can expect to see that record uh
a little bit higher up in the search
results a few other parameters uh
keyword is taxonomy so we've simplified
V2 so that in the case where you no
longer have to use two separate
operations to search for keywords versus
taxonomy codes as an example if I wanted
to search for food resources which the
code is bd1 1800 I can do so by just
typing into the keywords box bd1 1800
and then telling the API that my keyword
is a
taxonomy code set that to true and now
the search will be conducted on the
taxonomy code in the case where we want
not just the food resources but all the
food and the and the children terms as
well right that might be a food pantry
or so on so forth kind of drilling into
the tree if you will just put an asteris
in behind and that will bring back all
the results for food plus
children we add a results advaned so
just a quick note on that is in the case
where you are testing and want to
understand the transformation that we do
to some of the put values uh as an
example if you leave unknown for search
within location and you also have the
location mode to be within Ventura is
both a city and a county so our geocoder
will determine whether it is going to
search based on Ventura being a county
or a city so that Geographic boundary of
course would be smaller or bigger
depending on the setting will tell you
in the results that we send back so even
though in the request you told us that
it was unknown or you didn't bother to
set it which is what the default value
is in the reest will return back to you
some information as to what we actually
set it to in the geocoder that's what
your results Advance gives you is
basically more information on how we
modified the values that you provide in
the request if we did modify them and as
well we'll P provide back some of the
geocoding information so you can see
more specifically the latitude longitude
or in the case of a geographic boundary
the uh the boundary type that we use so
check that out and uh the other a couple
of values on the on the get operation
order by Distance by default it's set to
true if it's set to FAL it will order by
relevance which takes into account a
number of things uh but basically gives
you a a different sort than what you
would get strictly by order by distance
and uh really nothing else to go into in
terms of the values here that is the get
operation so I'll leave you to
experiment with uh the parameter values
on the on the get operation and now I
want to jump over into post the post
operation is really more of an advanced
scenario where you want find tune
control over how you search for
resources you still will be entering
a search set of
terms for example in this case Let's uh
we'll just make
it
food so you're still entering your food
your or sorry your search in your your
location but you'll notice now that
we're submitting a Json formatted
request within the body of the payload
being sent okay so this is a more
advanced technically but I will go
through just a brief summary of of what
you can do so you're familiar those of
you who are comfortable with submitting
uh Json within the request body let me
just briefly describe and and this will
highlight the control that you have over
the
search um search within location being
over that already so this is the
geographic um type of the location so
we're saying search uh Ventura Val
California but when you search for
resources in Ventura treat Ventura as
the county and not the city our paging
is here so all of the values that you
saw on get are now going to be in the
post include total count that'll return
the total number available so if we if
you brought back 10 resources but there
is 100 will'll tell you that uh there's
100 values there so you can decide on
how you're going to page to those
results um probably most importantly are
the
filters uh that are available on the
post request this gives you really fine
control over how you want to filter your
data there are a number of filters that
are available and let me just jump over
to those now so if we come back to the
documentation and scroll down to the
filters search filters we can see here
are the filters that you can pass in as
parameter values we can pass in tag
service which allows you to enter one or
more tags so these are tags that are
applied by the 211 to their resource
data you can pass those in and and it
will filter your search for not only the
keywords but it will ensure that the tag
that you apply as the value is used to
filter in the case where there isn't a
tag of that value your count would be
zero that came back you can filter over
a number of other items as as well so
please check back to the documentation
we're updating the the different values
for the filters that can be uh that can
be applied okay let's jump back now in
into into the the post and just finish
off the summary here of the
body other control that you have is the
order buy so you can decide how what
field you would like to
order uh order your uh results by and it
goes in the order in which you submit so
in this case we only have one order by
and it's going to sort in ascending
order based on the name of the service
if you have multiple they'll sort first
by one by two by three and so on so
forth the facets that come back so this
is essentially a feature that allows you
to bring back results similar to Amazon
you type in TVs you're going to be
brought back a thousand TVs the facets
are how you can further filter that same
search so you search for TVs you have a
thousand of them but the facets are
things such as size brand cost we
provide those back in terms of facets so
you specify the facet values that you
want to have returned and again you can
look up what those facet values are in
the documentation so other information
sorry the the screen's a little bit
squeezed here so it's not it's not
pretty Json here uh so you just have to
follow through kind of my description
you can control the search fields and
the select fields that come back you can
also control things as I demonstrated in
the uh in the in the get you can control
things such as service areas and uh
search modes controlling whether the
search term is a taxonomy code okay so
that's enough for the for the demo as
far as the request body you can read
more in the documentation available at
the search API site the last thing I
want to do is introduce you to a couple
of uh what we call code Snippets that
kind of get you started with
understanding how to work with the post
operation of the of the search API again
we recognize that this is a fairly
complex way to interact with the API but
we want to give you the power to really
refine the data that you're looking for
in the repository so to help get you
started under get started we have a
search API V2 page where if you scroll
down on the page what you will notice is
a number of examples so starting with
the from the most sort of
straightforward or simple uh
operations or
um or ways in which to search is example
one search any keywords from location
with default settings and you'll see
that we have already provided some uh
values that you can copy and paste so
we're going to search childcare Ventura
California you'll see some of the values
that you just saw when I was interacting
with the with the default value how you
work with the
post is just simply copy and then come
back over
to come back over to the API sorry about
that let's come over into search V2 one
more time grab the
post hit try it and now let's just
scroll down and remove paste in and now
you have a almost kind of like a
starting set of Snippets in which you
can just drop
into the body and conduct your search so
to give you a sense of what's available
inside of those posts we do a number
number of things going from very
straightforward which I just
demonstrated right down to if we scroll
to the bottom here you'll have an
example let's get a really complex
example here search taxonomy term
serving
locations uh so Ser sorry serving the
locations in which you enter so we're
going to stay with our Ventura but we're
looking for dance instruction rent
payment assistance is the taxonomy terms
of course then we have to uh tell the
API that we are searching over the uh
keyword being a uh being a taxonomy term
so again you can just copy and paste and
see what the results are and get used to
what uh needs to be entered into that
post body okay the very last thing and
then we'll wrap up this video is I'm
going to come back into into the search
api2 and introduce you to the filters so
I've talked about this in other videos
just touched on it briefly here in this
video but the filters are a way for you
to control of course what comes back but
you need to know what potential values
can come back so as an example let's use
one of the easier examples tags so tags
are applied by 211s to their data in
order to kind of pick cherry pick out
resources from the directory it might it
might be a small set of resources in
which you want to ensure come back so
this is how we typically use tags but
how do you know what the tag values are
of course we're going to we provide you
with some documentation as to how to get
started but if we just jump in here I'll
demonstrate that the tags is a very
straightforward filter API and what I'm
going to ask it is give me all the tags
for and it only takes one parameter
value called Data owners give me the
tags for 211 Ventura and back will come
then the full set of tags that are
available uh for you to use in the case
of venturer they have one tag that's
used as kinship so now you can go into
uh into the post operation of the search
API and you can essentially apply the
filter tags service and then enter the
value kinship and then you will be
returned all values that have the
kinship term applied okay I'll leave you
to check out the rest of the filters
that are available but this wrap up the
introduction to the search API check
back to the get started page and other
areas within the portal in the near
future we'll post out some more advanced
videos that describe specific scenarios
and help you uh get up and running