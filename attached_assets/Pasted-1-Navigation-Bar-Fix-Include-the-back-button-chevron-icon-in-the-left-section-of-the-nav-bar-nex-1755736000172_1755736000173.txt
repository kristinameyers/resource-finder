1. Navigation Bar Fix
Include the back button (chevron icon) in the left section of the nav bar, next to the hamburger (menu) button.

The left section order:
[hamburger/menu icon] [chevron/back icon]

Ensure both are clickable and spaced as in the mockup.

Logo remains centered. Location/pin icon stays on the right.

CSS for Nav Bar (with Back Button)
css
.global-navbar {
  width: 100vw;
  height: 66px;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2000;
  box-shadow: 0 2px 8px rgba(34,34,34,0.05);
  padding: 0 16px;
}

.nav-left {
  display: flex;
  align-items: center;
  gap: 16px; /* space between icons */
}

.nav-icon {
  width: 32px;
  height: 32px;
  cursor: pointer;
  background: none;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.nav-center {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.nav-logo {
  height: 46px;
  object-fit: contain;
}

.nav-right {
  display: flex;
  align-items: center;
}
Example JSX:

jsx
<div className="global-navbar">
  <div className="nav-left">
    <button className="nav-icon" onClick={openMenu}>{/* Hamburger SVG */}</button>
    <button className="nav-icon" onClick={goBack}>{/* Chevron SVG */}</button>
  </div>
  <div className="nav-center">
    <img className="nav-logo" src="sb-211-logo.png" alt="Santa Barbara 211 Logo"/>
  </div>
  <div className="nav-right">
    <button className="nav-icon" onClick={goToLocation}>{/* Location SVG */}</button>
  </div>
</div>
2. Slide-Out Menu Implementation
Menu slides out from the left side when the hamburger is clicked.

Style is clean, flat, white background; menu items have visible separators.

A menu item is highlighted with a solid blue background and white text when selected.

CSS for Slide-Out Menu
css
.slide-menu {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 270px;
  background: #fff;
  box-shadow: 2px 0 12px rgba(40,40,40,0.10);
  z-index: 3000;
  display: flex;
  flex-direction: column;
  padding-top: 66px; /* accounts for nav bar height */
  font-family: Arial, sans-serif;
}

.menu-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.menu-list-item {
  font-size: 18px;
  padding: 16px 22px;
  border-bottom: 1px solid #e5e5e5;
  color: #222;
  background: #fff;
  cursor: pointer;
  outline: none;
  transition: background 0.18s, color 0.18s;
}

/* Highlighted (selected/active) menu item */
.menu-list-item.selected,
.menu-list-item:focus {
  background: #0458a3;
  color: #fff;
  font-weight: 600;
}

/* Remove bottom border on last menu item */
.menu-list-item:last-child {
  border-bottom: none;
}
Example JSX Structure:

jsx
<div className="slide-menu">
  <ul className="menu-list">
    <li className="menu-list-item" onClick={goHome}>Home</li>
    <li className="menu-list-item" onClick={goAbout}>About</li>
    <li className="menu-list-item" onClick={goCategory}>Search by Category</li>
    <li className="menu-list-item" onClick={goKeyword}>Search by Keyword</li>
    <li className="menu-list-item" onClick={goLocation}>Update Location</li>
    <li className="menu-list-item" onClick={goFavorites}>Favorites</li>
    <li className="menu-list-item" onClick={() => window.open('tel:211')}>Call 211</li>
    <li className="menu-list-item" onClick={goSettings}>Settings</li>
  </ul>
</div>
When a menu item is active/selected (or hovered/focused for accessibility), apply the .selected style for blue/white highlight as shown.

3. Summary to Replit
Re-add the back button to the nav bar, positioned as in sample.

Implement the left slide-out menu to match your attached image: flat, white, full-height, each item with bottom border, blue highlight for active item.

Do not use colored/shadowed buttons; only blue highlight for the selected menu item.

The menu content should be vertically stacked and spaced as in your screenshot.